#!/bin/sh
# postinst script for murano-dashboard
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
# * <postinst> `configure' <most-recently-configured-version>
# * <old-postinst> `abort-upgrade' <new version>
# * <conflictor's-postinst> `abort-remove' `in-favour' <package>
# <new-version>
# * <postinst> `abort-remove'
# * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
# <failed-install-package> <version> `removing'
# <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

HORIZON_USER=horizon
HORIZON_GROUP=horizon

OPENSTACK_DASHBOARD_DIR=/usr/share/openstack-dashboard

MURANO_DASHBOARD_CACHE=/var/cache/muranodashboard-cache
MURANO_LOG_DIR=/var/log/murano


save_symlinks_from_static_dir() {
    # Save all symbolic links from openstack_dashboard/static dir
    #------------------------------------------------------------
    local currdir=$(pwd)
    cd $OPENSTACK_DASHBOARD_DIR/static

    rm -f .symlinks
    for f in $(find . -type l); do
        printf "Saving symlink '%s' ...\n" $f
        printf "%s\t%s\n" $f $(readlink $f) >> .symlinks
        rm -f $f
    done

    cd $currdir
    #------------------------------------------------------------
}

restore_symlinks_from_static_dir() {
    # Restore sympbolic links
    #------------------------
    local currdir=$(pwd)
    cd $OPENSTACK_DASHBOARD_DIR/static

    if [ ! -f .symlinks ]; then
        cd $currdir
        return
    fi

    while read name path; do
        printf "Restoring symlink '%s' ...\n" $f
            if [ -d "$name" ]; then
                rm -rf "$name"
            fi
            ln -s "$path" "$name"
    done < .symlinks

    rm -f .symlinks

    cd $currdir
    #------------------------
}

configure_dashboard() {
    mkdir -p $MURANO_DASHBOARD_CACHE
    chown -R $HORIZON_USER:$HORIZON_GROUP $MURANO_DASHBOARD_CACHE

    MURANO_DASHBOARD_CACHE=$MURANO_DASHBOARD_CACHE /usr/bin/modify-horizon-config.sh install

    if [ ! -d "$MURANO_LOG_DIR" ]; then
        mkdir -p $MURANO_LOG_DIR
    fi

    touch $MURANO_LOG_DIR/murano-dashboard.log
    chown $HORIZON_USER:$HORIZON_GROUP $MURANO_LOG_DIR/murano-dashboard.log

    mkdir -p $OPENSTACK_DASHBOARD_DIR/static/floppyforms
    chown -R $HORIZON_USER:$HORIZON_GROUP $OPENSTACK_DASHBOARD_DIR/static/floppyforms

    mkdir -p $OPENSTACK_DASHBOARD_DIR/static/muranodashboard
    chown -R $HORIZON_USER:$HORIZON_GROUP $OPENSTACK_DASHBOARD_DIR/static/muranodashboard

    save_symlinks_from_static_dir
    su -c "python $OPENSTACK_DASHBOARD_DIR/manage.py collectstatic --noinput | /usr/bin/logger -t murano-dashboard-install" -s /bin/bash $HORIZON_USER
    restore_symlinks_from_static_dir

    su -c "python $OPENSTACK_DASHBOARD_DIR/manage.py syncdb --noinput | /usr/bin/logger -t murano-dashboard-install" -s /bin/bash $HORIZON_USER

    service apache2 restart
}

case "$1" in
    configure)
        configure_dashboard
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
        exit 0
    ;;
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

exit 0
